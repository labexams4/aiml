import pandas as pd
import numpy as np
from sklearn.datasets import load_iris
from sklearn.cluster import KMeans
from sklearn.metrics import silhouette_score
import matplotlib.pyplot as plt
iris = load_iris()
X = pd.DataFrame(iris.data, columns=["Sepal Length", "Sepal Width", "Petal Length", "Petal Width"])
def plot_kmeans(X, kmeans, iteration):
  plt.scatter(X["Petal Length"], X["Petal Width"], c=kmeans.labels_, cmap='viridis', s=50)
  centers = kmeans.cluster_centers_
  plt.scatter(centers[:, 2], centers[:, 3], c='red', marker='x', s=200, label="centroids")
  plt.title(f"Iteration {iteration}")
  plt.xlabel("Petal Length")
  plt.ylabel("Petal Width")
  plt.legend()
  plt.show()
kmeans = KMeans(n_clusters=3, init="random", n_init=1, max_iter=1, random_state=0)
previous_centroids = None
for i in range(1, 11):
   if i == 1:
     kmeans.fit(X)
   else:
     kmeans = KMeans(n_clusters=3, init=kmeans.cluster_centers_, n_init=1, max_iter=1, random_state=0)
     kmeans.fit(X)
   current_centroids = kmeans.cluster_centers_
   if previous_centroids is not None and np.all(previous_centroids == current_centroids):
     print(f"Convergence reached at iteration {i}")
     break
   previous_centroids = current_centroids
   print(f"iteration {i}:centroids \n",kmeans.labels_)
   plot_kmeans(X, kmeans,i)
print("kmeans labels:",kmeans.labels_)
labels=kmeans.labels_
score = silhouette_score(X, labels)
print(f"Silhouette Score: {score}")
